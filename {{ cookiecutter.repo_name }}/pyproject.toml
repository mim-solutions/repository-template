[tool.poetry]
name = "{{ cookiecutter.repo_name }}"
version = "0.1.0"
packages = [{include = "{{ cookiecutter.package_name }}"}]
description = ""
authors = []
readme = "README.md"
license = "MIT"
repository = "https://github.com/mim-solutions/{{ cookiecutter.repo_name }}"

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"

{% if cookiecutter.use_poetry -%}
[tool.poetry.group.test.dependencies]
pytest = "*"

[tool.poetry.group.lint.dependencies]
flake8 = "*"
isort = "*"
nbqa = "*"
{% if cookiecutter.use_black -%}
black = "*"
{%- endif %}

[tool.poetry.group.dev.dependencies]
jupyter = "*"
{%- else -%}
pytest = "*"
flake8 = "*"
isort = "*"
jupyter = "*"
nbqa = "*"
{% if cookiecutter.use_black -%}
black = "*"
{%- endif %}
{%- endif %}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
combine_as_imports = true
profile = "black"
known_first_party = ["{{ cookiecutter.package_name }}", "tests"]
skip = [
    ".git",
    ".vscode",
    ".idea",
    "__pycache__",
    ".ipynb_checkpoints",
    "stripped",
    "venv",
    ".venv",
    "dist",
    ".hooks",
]

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = [
    "{{ cookiecutter.package_name }}",
    "tests",
]

{% if cookiecutter.use_black -%}
[tool.black]
line-length = 120

force-exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | venv
  | .venv
  | _build
  | buck-out
  | build
  | dist
  | stripped
  | data
  | .hooks
)/
'''
{%- endif %}
